ADVANCED SQL QUERIES :
======================

/* SQL CTE(Common Table Expression */

WITH CTE_query AS
(SELECT Demo.EmployeeID, Demo.FirstName, Demo.LastName, Demo.Gender, Sal.Salary,
COUNT(Gender) OVER (PARTITION BY Gender) AS TotalGender,
AVG(Salary) OVER (PARTITION BY Gender) AS AvgSalary
FROM [SQL Queries].[dbo].[EmployeeDemographics] Demo
JOIN [SQL Queries].[dbo].[EmployeeSalary] Sal
 ON Demo.EmployeeID = Sal.EmployeeID
 WHERE Sal.Salary > '45000'
)
SELECT FirstName, LastName, AvgSalary FROM CTE_query

/* SQL - Temp table */

CREATE TABLE #temp_Employee2(
JobTitle varchar(50),
EmployeePerJob int,
AvgAge int,
Salary int
)

INSERT INTO #temp_Employee2
SELECT JobTitle, COUNT(JobTitle), AVG(Age), AVG(Salary)
FROM [SQL Queries].[dbo].[EmployeeDemographics] demo
JOIN [SQL Queries].[dbo].[EmployeeSalary] sal
ON demo.EmployeeID = sal.EmployeeID
GROUP BY JobTitle

SELECT * FROM #temp_Employee2

/* SQL String functions - TRIM, LTRIM, RTRIM, Replace, Substring, Upper, Lower */

CREATE TABLE EmployeeErrors(
EmployeeID varchar(50),
FirstName varchar(50),
LastName varchar(50)
)

INSERT INTO EmployeeErrors VALUES
('101     ', 'Jimbo', 'Halbert'),
('  102', 'Pamela', 'Beasely'),
('105', 'TOm', 'Krus - Fired')

SELECT * FROM EmployeeErrors

-- Using TRIM, LTRIM, RTRIM

SELECT EmployeeID, TRIM(EmployeeID) as IDTRIM
FROM EmployeeErrors

SELECT EmployeeID, LTRIM(EmployeeID) as IDTRIM
FROM EmployeeErrors

SELECT EmployeeID, RTRIM(EmployeeID) as IDTRIM
FROM EmployeeErrors

-- Using Replace
SELECT LastName, REPLACE(LastName, '- Fired','')
FROM EmployeeErrors

-- Using Substring
SELECT LastName, SUBSTRING(LastName, 1,3)
FROM EmployeeErrors

-- Using UPPER and LOWER

SELECT UPPER(FirstName), LOWER(LastName) FROM EmployeeErrors
/* SQL Stored Procedures */

CREATE PROCEDURE Temp_Employee
AS
DROP TABLE IF EXISTS #temp_employee
Create table #temp_employee (
JobTitle varchar(100),
EmployeesPerJob int ,
AvgAge int,
AvgSalary int
)


Insert into #temp_employee
SELECT JobTitle, Count(JobTitle), Avg(Age), AVG(salary)
FROM SQLTutorial..EmployeeDemographics emp
JOIN SQLTutorial..EmployeeSalary sal
	ON emp.EmployeeID = sal.EmployeeID
group by JobTitle

Select * 
From #temp_employee
GO;

/* Subqueries (in the Select, From, and Where Statement) */

Select EmployeeID, JobTitle, Salary
From EmployeeSalary

-- Subquery in Select

Select EmployeeID, Salary, (Select AVG(Salary) From EmployeeSalary) as AllAvgSalary
From EmployeeSalary

-- Subquery in From

Select a.EmployeeID, AllAvgSalary
From 
	(Select EmployeeID, Salary, AVG(Salary) over () as AllAvgSalary
	 From EmployeeSalary) a
Order by a.EmployeeID

-- Subquery in Where

Select EmployeeID, JobTitle, Salary
From EmployeeSalary
where EmployeeID in (
	Select EmployeeID 
	From EmployeeDemographics
	where Age > 30)
